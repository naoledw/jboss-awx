---
- name: Clone and configure JBoss profile + socket-binding + server-group
  hosts: "{{ target_host }}"
  gather_facts: false
  vars_prompt:
    - name: clone_from_profile
      prompt: "Enter the profile to clone from"
      private: no

    - name: new_profile
      prompt: "Enter new profile name"
      private: no

    - name: new_queue_1
      prompt: "Enter new name for queue"
      private: no

    - name: new_queue_2
      prompt: "Enter new name for reply queue"
      private: no

    # Prompt socket ports dynamically
    - name: port_ajp
      prompt: "Enter AJP port"
      private: no
    - name: port_http
      prompt: "Enter HTTP port"
      private: no
    - name: port_https
      prompt: "Enter HTTPS port"
      private: no
    - name: port_iiop
      prompt: "Enter IIOP port"
      private: no
    - name: port_iiop_ssl
      prompt: "Enter IIOP-SSL port"
      private: no
    - name: port_txn_recovery
      prompt: "Enter txn-recovery-environment port"
      private: no
    - name: port_txn_status
      prompt: "Enter txn-status-manager port"
      private: no

  vars:
    jboss_home: "/u01/T24/JBOSS"
    jboss_user: "{{ jboss_user }}"
    jboss_pass: "{{ jboss_pass }}"
    jboss_cli: "{{ jboss_home }}/bin/jboss-cli.sh --user={{ jboss_user }} --password={{ jboss_pass }} --connect"

    # EJB pool
    new_ejb_pool: "{{ new_profile }}-mdb-strict-max-pool"

    # Socket binding
    socket_binding_group_name: "{{ new_profile }}-full-sockets"
    socket_ports:
      ajp: "{{ port_ajp }}"
      http: "{{ port_http }}"
      https: "{{ port_https }}"
      iiop: "{{ port_iiop }}"
      iiop-ssl: "{{ port_iiop_ssl }}"
      txn-recovery-environment: "{{ port_txn_recovery }}"
      txn-status-manager: "{{ port_txn_status }}"

    # Server group
    server_group_name: "{{ new_profile }}-group"

  tasks:
    # -------------------------
    # Profile
    # -------------------------
    - name: Clone profile
      raw: "{{ jboss_cli }} --command='/profile={{ clone_from_profile }}:clone(to-profile={{ new_profile }})'"
      register: clone_profile
      failed_when: false

    - name: Update EJB3 pool name
      raw: "{{ jboss_cli }} --command='/profile={{ new_profile }}/subsystem=ejb3/strict-max-bean-instance-pool=dev-mdb-strict-max-pool:write-attribute(name=name,value={{ new_ejb_pool }})'"
      when: clone_profile is succeeded

    - name: Update admin-object queues
      raw: "{{ jboss_cli }} --command='/profile={{ new_profile }}/subsystem=resource-adapters/resource-adapter=activemq-ra/admin-objects={{ item.old }}:write-attribute(name=jndi-name,value=java:/queue/{{ item.new }})'"
      loop:
        - { old: '{{ old_queue_1 }}', new: '{{ new_queue_1 }}' }
        - { old: '{{ old_queue_2 }}', new: '{{ new_queue_2 }}' }
      when: clone_profile is succeeded

    # -------------------------
    # Socket Binding Group
    # -------------------------
    - name: Clone socket-binding-group
      raw: "{{ jboss_cli }} --command='/socket-binding-group={{ clone_from_profile }}-sockets:clone(to-socket-binding-group={{ socket_binding_group_name }})'"
      register: clone_sb
      failed_when: false

    - name: Update socket-binding ports
      raw: "{{ jboss_cli }} --command='/socket-binding-group={{ socket_binding_group_name }}/socket-binding={{ item.key }}:write-attribute(name=port,value={{ item.value }})'"
      loop: "{{ socket_ports | dict2items }}"
      when: clone_sb is succeeded

    # -------------------------
    # Server Group
    # -------------------------
    - name: Clone server-group
      raw: "{{ jboss_cli }} --command='/server-group={{ clone_from_profile }}-group:clone(to-server-group={{ server_group_name }},profile={{ new_profile }},socket-binding-group={{ socket_binding_group_name }})'"
      register: clone_sg
      failed_when: false
