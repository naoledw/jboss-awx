---
- name: Clone and customize JBoss profile (domain mode)
  hosts: "{{ target_host }}"
  gather_facts: false
  vars:
    jboss_home: "/u01/T24/JBOSS"
    jboss_user: "{{ jboss_user }}"
    jboss_pass: "{{ jboss_pass }}"
    jboss_cli: "{{ jboss_home }}/bin/jboss-cli.sh --user={{ jboss_user }} --password={{ jboss_pass }} --connect"

    # required inputs (pass via extra_vars or AWX Survey)
    clone_from_profile: "{{ clone_from_profile }}"        # source profile to clone
    new_profile: "{{ new_profile }}"                      # name of new profile
    clone_from_socket_group: "{{ clone_from_socket_group }}"      # source socket-binding-group
    socket_binding_group_name: "{{ socket_binding_group_name }}"  # new socket-binding-group name
    clone_from_server_group: "{{ clone_from_server_group }}"      # source server-group
    server_group_name: "{{ server_group_name }}"                  # new server-group name

    # datasource settings
    datasource_name: "{{ datasource_name | default('OracleDS') }}"
    db_host: "{{ db_host }}"
    db_port: "{{ db_port }}"
    db_sid: "{{ db_sid }}"

    # EJB pool rename
    old_ejb_pool_name: "{{ old_ejb_pool_name | default('dev-mdb-strict-max-pool') }}"
    new_ejb_pool_name: "{{ new_ejb_pool_name | default(new_profile ~ '-mdb-strict-max-pool') }}"
    ejb_pool_max: "{{ ejb_pool_max | default(200) }}"
    ejb_pool_timeout: "{{ ejb_pool_timeout | default(5) }}"

    # Resource adapter / ActiveMQ
    resource_adapter_name: "{{ resource_adapter_name | default('activemq-ra') }}"
    connection_definition: "{{ connection_definition | default('org.apache.activemq.ra.ActiveMQManagedConnectionFactory') }}"
    connection_definition_name: "{{ connection_definition_name | default('devConnectionFactoryMQ') }}"
    new_connection_factory: "{{ new_connection_factory | default(connection_definition_name) }}"
    mq_host: "{{ mq_host }}"
    mq_port: "{{ mq_port }}"
    mq_serverurl_template: "failover:(tcp://{{ mq_host }}:{{ mq_port }}?soLinger=0)"

    # admin objects (list of dicts: name, jndi, physical_name, class_name)
    admin_objects: "{{ admin_objects | default([{'name':'t24devQueue','jndi':'java:/queue/t24devQueue','physical':'t24devQueue','class':'org.apache.activemq.command.ActiveMQQueue'},{'name':'t24devReplyQueue','jndi':'java:/queue/t24devReplyQueue','physical':'t24devReplyQueue','class':'org.apache.activemq.command.ActiveMQQueue'}]) }}"

    # socket-binding ports (map of socket-binding name => port)
    socket_ports: "{{ socket_ports | default({
      'ajp': 8007,
      'http': 8031,
      'https': 9031,
      'iiop': 3507,
      'iiop-ssl': 3607,
      'txn-recovery-environment': 4707,
      'txn-status-manager': 4807
    }) }}"

    # outbound sockets (map name -> {host, port})
    outbound_sockets: "{{ outbound_sockets | default({'mail-smtp': {'host': 'localhost', 'port': 25}}) }}"

  tasks:

    - name: Check source profile exists
      raw: "{{ jboss_cli }} --command='/profile={{ clone_from_profile }}:read-resource'"
      register: src_profile_check
      failed_when: false

    - name: Check new profile existence
      raw: "{{ jboss_cli }} --command='/profile={{ new_profile }}:read-resource'"
      register: new_profile_check
      failed_when: false

    - name: Clone profile if new profile not present
      raw: "{{ jboss_cli }} --command='/profile={{ clone_from_profile }}:clone(to-profile={{ new_profile }})'"
      when: "'success' not in new_profile_check.stdout.lower() and 'success' in src_profile_check.stdout.lower()"
      register: clone_profile
      failed_when: false

    - name: Check source socket-binding-group exists
      raw: "{{ jboss_cli }} --command='/socket-binding-group={{ clone_from_socket_group }}:read-resource'"
      register: src_sb_check
      failed_when: false

    - name: Check target socket-binding-group existence
      raw: "{{ jboss_cli }} --command='/socket-binding-group={{ socket_binding_group_name }}:read-resource'"
      register: tgt_sb_check
      failed_when: false

    - name: Clone socket-binding-group if not exists
      raw: "{{ jboss_cli }} --command='/socket-binding-group={{ clone_from_socket_group }}:clone(to-socket-binding-group={{ socket_binding_group_name }})'"
      when: "'success' not in tgt_sb_check.stdout.lower() and 'success' in src_sb_check.stdout.lower()"
      register: clone_sb
      failed_when: false

    - name: Update socket-binding ports (standard bindings)
      raw: >-
        {{ jboss_cli }} --command="/socket-binding-group={{ socket_binding_group_name }}/socket-binding={{ item.key }}:write-attribute(name=port,value={{ item.value }})"
      loop: "{{ socket_ports | dict2items }}"
      when: "'success' in (tgt_sb_check.stdout | lower) or ('success' in (clone_sb.stdout | default('')))"
      failed_when: false
      register: sb_update_results

    - name: Update outbound socket remote-destination(s)
      raw: >-
        {{ jboss_cli }} --command="/socket-binding-group={{ socket_binding_group_name }}/outbound-socket-binding={{ item.key }}/remote-destination=remote:write-attribute(name=host,value={{ item.value.host }})"
      loop: "{{ outbound_sockets | dict2items }}"
      when: "'success' in (tgt_sb_check.stdout | lower) or ('success' in (clone_sb.stdout | default('')))"
      failed_when: false
      register: outbound_host_updates
      # set port separately if remote-destination supports write-attribute
    - name: Update outbound socket remote-destination port(s)
      raw: >-
        {{ jboss_cli }} --command="/socket-binding-group={{ socket_binding_group_name }}/outbound-socket-binding={{ item.key }}/remote-destination=remote:write-attribute(name=port,value={{ item.value.port }})"
      loop: "{{ outbound_sockets | dict2items }}"
      when: "'success' in (tgt_sb_check.stdout | lower) or ('success' in (clone_sb.stdout | default('')))"
      failed_when: false
      register: outbound_port_updates

    - name: Check source server group exists
      raw: "{{ jboss_cli }} --command='/server-group={{ clone_from_server_group }}:read-resource'"
      register: src_sg_check
      failed_when: false

    - name: Check target server group existence
      raw: "{{ jboss_cli }} --command='/server-group={{ server_group_name }}:read-resource'"
      register: tgt_sg_check
      failed_when: false

    - name: Clone server group if not exists (links to new profile & socket-binding-group)
      raw: >-
        {{ jboss_cli }} --command="/server-group={{ clone_from_server_group }}:clone(to-server-group={{ server_group_name }},profile={{ new_profile }},socket-binding-group={{ socket_binding_group_name }})"
      when: "'success' not in tgt_sg_check.stdout.lower() and 'success' in src_sg_check.stdout.lower()"
      register: clone_sg
      failed_when: false

    - name: Update datasource connection-url (idempotent)
      raw: >-
        {{ jboss_cli }} --command="/profile={{ new_profile }}/subsystem=datasources/data-source={{ datasource_name }}:write-attribute(name=connection-url,value=jdbc:oracle:thin:@{{ db_host }}:{{ db_port }}:{{ db_sid }})"
      failed_when: false
      register: ds_update

    - name: Create or update EJB strict-max instance pool (idempotent add)
      raw: >-
        {{ jboss_cli }} --command="/profile={{ new_profile }}/subsystem=ejb3/strict-max-bean-instance-pool={{ new_ejb_pool_name }}:add(max-pool-size={{ ejb_pool_max }},instance-acquisition-timeout={{ ejb_pool_timeout }},instance-acquisition-timeout-unit=MINUTES)"
      failed_when: false
      register: ejb_pool_add

    - name: Update resource-adapter connection-definition jndi/pool-name (idempotent)
      raw: >-
        {{ jboss_cli }} --command="/profile={{ new_profile }}/subsystem=resource-adapters/resource-adapter={{ resource_adapter_name }}/connection-definitions={{ connection_definition_name }}:write-attribute(name=pool-name,value={{ new_connection_factory }})"
      failed_when: false
      register: ra_conn_update

    - name: Update (or set) connection-definition jndi-name
      raw: >-
        {{ jboss_cli }} --command="/profile={{ new_profile }}/subsystem=resource-adapters/resource-adapter={{ resource_adapter_name }}/connection-definitions={{ connection_definition_name }}:write-attribute(name=jndi-name,value=java:/{{ new_connection_factory }})"
      failed_when: false
      register: ra_jndi_update

    - name: Update ActiveMQ ServerUrl config-property for resource-adapter
      raw: >-
        {{ jboss_cli }} --command="/profile={{ new_profile }}/subsystem=resource-adapters/resource-adapter={{ resource_adapter_name }}/connection-definitions={{ connection_definition_name }}/config-property=ServerUrl:write-attribute(name=value,value={{ mq_serverurl_template }})"
      failed_when: false
      register: ra_serverurl_update

    - name: Add/Update admin-objects (queues)
      loop: "{{ admin_objects }}"
      loop_control:
        label: "{{ item.jndi }}"
      block:
        - name: Check admin-object existence
          raw: >-
            {{ jboss_cli }} --command="/profile={{ new_profile }}/subsystem=resource-adapters/resource-adapter={{ resource_adapter_name }}/admin-objects={{ item.name }}:read-resource"
          register: admin_check
          failed_when: false

        - name: Add admin-object if missing
          raw: >-
            {{ jboss_cli }} --command="/profile={{ new_profile }}/subsystem=resource-adapters/resource-adapter={{ resource_adapter_name }}/admin-objects={{ item.name }}:add(class-name={{ item.class }}, jndi-name={{ item.jndi }}, enabled=true, use-java-context=true, pool-name={{ item.name }})"
          when: "'success' not in admin_check.stdout.lower()"
          failed_when: false

        - name: Set admin-object PhysicalName config-property
          raw: >-
            {{ jboss_cli }} --command="/profile={{ new_profile }}/subsystem=resource-adapters/resource-adapter={{ resource_adapter_name }}/admin-objects={{ item.name }}/config-property=PhysicalName:write-attribute(name=value,value={{ item.physical }})"
          failed_when: false
      when: admin_objects is defined

    - name: Final: show summary
      debug:
        msg:
          - "Profile clone attempted: {{ clone_profile.stdout | default('') }}"
          - "Socket-binding clone attempted: {{ clone_sb.stdout | default('') }}"
          - "Server-group clone attempted: {{ clone_sg.stdout | default('') }}"
          - "Datasource update: {{ ds_update.stdout | default('') }}"
          - "EJB pool add: {{ ejb_pool_add.stdout | default('') }}"
          - "Resource adapter updates: {{ ra_conn_update.stdout | default('') }}, {{ ra_serverurl_update.stdout | default('') }}"
